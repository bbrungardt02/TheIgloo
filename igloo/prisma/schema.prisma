// schema.prisma

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  user_id    Int       @id @default(autoincrement()) @map("user_id")
  username   String
  email      String    @unique
  password   String
 created_at DateTime   @default(now()) 
  orders     Order[]
}

model Product {
  product_id     Int       @id @default(autoincrement()) @map("product_id")
  name           String
  description    String
  price          Float
  image_url      String
  stock_quantity Int
  subcategory_id Int
  created_at     DateTime   @default(now())
  subcategory    Subcategory @relation(fields: [subcategory_id], references: [subcategory_id])
  order_items    OrderItem[]
}

model Subcategory {
  subcategory_id Int       @id @default(autoincrement()) @map("subcategory_id")
  name           String
  category_id    Int       @map("category_id")
  category       Category  @relation(fields: [category_id], references: [category_id])
  products       Product[]
}

model Category {
  category_id Int       @id @default(autoincrement()) @map("category_id")
  name        String
  subcategories Subcategory[]
}

model Order {
  order_id     Int       @id @default(autoincrement()) @map("order_id")
  user_id      Int
  order_date   DateTime
  total_amount Float
  created_at   DateTime   @default(now())
  user         User      @relation(fields: [user_id], references: [user_id])
  order_items  OrderItem[]
}

model OrderItem {
  order_item_id Int       @id @default(autoincrement()) @map("order_item_id")
  order_id      Int
  product_id    Int
  quantity      Int
  subtotal      Float
  order         Order     @relation(fields: [order_id], references: [order_id])
  product       Product   @relation(fields: [product_id], references: [product_id])
}